/**
 * Module for rendering Mermaid diagrams
 */

/**
 * Get Mermaid resources (CSS and script tags)
 * @param {Object} options - Configuration options
 * @param {string} options.version - Mermaid version to use (default: '10.6.1')
 * @returns {Object} - Object with script property
 */
function getMermaidResources(options = {}) {
  const version = options.version || '10.6.1';
  
  return {
    script: `<script src="https://cdn.jsdelivr.net/npm/mermaid@${version}/dist/mermaid.min.js"></script>`
  };
}

/**
 * Process Mermaid diagrams in HTML content
 * @param {string} html - HTML content with Mermaid diagrams
 * @param {Object} options - Configuration options
 * @param {boolean} options.darkMode - Whether to use dark theme (default: false)
 * @param {string} options.startOnLoad - Whether to initialize on page load (default: true)
 * @param {Object} options.configOverrides - Additional Mermaid configuration options
 * @returns {string} - Processed HTML with initialization script for Mermaid
 */
function processMermaidDiagrams(html, options = {}) {
  const darkMode = options.darkMode !== undefined ? options.darkMode : false;
  const startOnLoad = options.startOnLoad !== undefined ? options.startOnLoad : true;
  const configOverrides = options.configOverrides || {};
  
  const theme = darkMode ? 'dark' : 'default';
  
  const mermaidScript = `
    <script>
      document.addEventListener("DOMContentLoaded", function() {
        mermaid.initialize({
          startOnLoad: ${startOnLoad},
          theme: '${theme}',
          ...${JSON.stringify(configOverrides)}
        });
      });
    </script>
  `;
  
  return html + mermaidScript;
}

module.exports = {
  getMermaidResources,
  processMermaidDiagrams
}; 